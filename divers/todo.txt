-BDD : version à jour sur le serveur
-avoir l'exécutable : une version "en local" + une version "à distance"

Notes / Voc :
- Add @SuppressWarnings ("permet de signaler au compilateur que l'on a conscience de réaliser une opération risquée, et qu'il peut donc arrêter de signaler un éventuel problème")
@SuppressWarnings("serial") : "oubli du SerialVersionUid dans une classe déclarée Serializable". (La sérialisation permet de rendre un objet persistant. Il est mis sous une forme sous laquelle il pourra être reconstitué à l'identique. Il pourra ainsi être stocké).
- propager une exception : lors de l'appel, on aura un try / catch
- pour faire un tri autrement que par chaînes de caractères, il autait fallu utiliser (fait planter l'appli si colonne nulle, ex : pas de vol_tmp) :
@Override
public Class<?> getColumnClass(int arg0) {
	return myValues[0][arg0].getClass();
}
- problème de conception avec la ville utilisée comme "clé" en PHP (=> 2 villes ne peuvent pas avoir le même nom + un aéroport "utilisé" ne peut pas être modifié sous peine de plantage... pas de redondance possible dans les noms de villes) (contourné en disant que "Pour des raisons de coûts logistiques, la compagnie n'utilise qu'un seul aéroport pour une même ville.")
- le numéro de vol n'a pas d'importance sémantique (le 6 peut partir avant le 2)...
- gestion des exceptions
- changer le nombre de places réservables sur un vol
